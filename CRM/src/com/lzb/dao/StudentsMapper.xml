<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzb.dao.StudentsMapper">
<select id="selectStuCounta" parameterType="fenye" resultType="int">
select count(sid) from students s,Users u
    <where>
    u.Uid=s.ConsultantId
    <if test="sname !='' and sname !=null">
        and sname like "%"#{sname}"%"
    </if>
    <if test="Smtel !='' and Smtel !=null">
        and Smtel like "%"#{Smtel}"%"
    </if>
    <if test="zixunshi !='' and zixunshi !=null">
        and u.LoginName=#{zixunshi}
    </if>
    <if test="QQ !='' and QQ !=null">
        and s.QQ like "%"#{QQ}"%"
    </if>
    <if test="StartData!=null and StartData!=''">
		and CreateData &gt; #{StartData}
	</if>
	<if test="EndData!=null and EndData!=''">
		and CreateData &lt; #{EndData}
	</if>
	<if test="IsEffective !='' and IsEffective !=null">
        and IsEffective=#{IsEffective}
    </if>
    <if test="IsPay !='' and IsPay !=null">
        and IsPay=#{IsPay}
    </if>
    <if test="IsReturnVisit !='' and IsReturnVisit !=null">
        and IsReturnVisit=#{IsReturnVisit}
    </if> 
</where>
</select>
<select id="selectStu" parameterType="fenye" resultType="students">
select s.Sid,
s.Sname,
s.Sex,
s.Age,
s.Smtel,
s.Education,
s.State,
s.Channel,
s.Website,
s.KeyWord,
s.Department,
s.NameConsultation,
s.Region,
s.IsReport,
s.Curriculum,
s.IsEffective,
s.Scoring,
s.IsReturnVisit,
s.ReturnVisitData,
s.Door,
s.DoorData,
s.Reason,
s.IsPay,
s.PayData,
s.Money,
s.IsRefund,
s.IsClassEntry,
s.ClassEntryData,
s.ClassEntryRemarks,
s.ReasonsRefund,
s.EarnestMoney,
s.EarnestMoneyData,
s.Follow,
s.QQ,
s.WeiXin,
s.IsEnroll,
s.Remarks,
s.ConsultantId,
s.NetworkConsultantId,
(select LoginName from  Users where Uid=1) as lururen,
s.ConsultantRemarks,
s.Int0,u.LoginName as zixunshi,s.String0
  from students s,Users u
<where>
    u.Uid=s.ConsultantId
     <if test="sname !='' and sname !=null">
        and sname like "%"#{sname}"%"
    </if> 
    <if test="Smtel !='' and Smtel !=null">
        and s.Smtel like "%"#{Smtel}"%"
    </if>
    <if test="zixunshi !='' and zixunshi !=null">
        and u.LoginName=#{zixunshi}
    </if>
    <if test="QQ !='' and QQ !=null">
        and s.QQ like "%"#{QQ}"%"
    </if>
    <if test="StartData!=null and StartData!=''">
		and ReturnVisitData &gt; #{StartData}
	</if>
	<if test="EndData!=null and EndData!=''">
		and ReturnVisitData &lt; #{EndData}
	</if>
	<if test="IsEffective !='' and IsEffective !=null">
        and IsEffective=#{IsEffective}
    </if>
    <if test="IsPay !='' and IsPay !=null">
        and IsPay=#{IsPay}
    </if>
    <if test="IsReturnVisit !='' and IsReturnVisit !=null">
        and IsReturnVisit=#{IsReturnVisit}
    </if>  
</where>
 limit #{page},#{pageSize}
</select>

<insert id="insertStu" parameterType="students">
insert into students(sname,sex,age,smtel,education,state,channel,website,KeyWord,qq,weiXin,isEnroll,remarks,consultantId)
values(#{sname},#{sex},#{age},#{smtel},#{education},#{state},#{channel},#{website},#{KeyWord},#{qq},#{weiXin},#{isEnroll},#{remarks},#{consultantId})

</insert>
<delete id="deleteStu" parameterType="int">
delete from students where sid=#{sid};
</delete>
<update id="updateStu" parameterType="students">
update students 
<set>
   <if test="sname !='' and sname != null">
       sname=#{sname},
   </if>
  <if test="sex!='' and sex != null">
       sex=#{sex},
   </if>
   <if test="age!='' and age != null">
       age=#{age},
   </if>
   <if test="smtel!='' and smtel != null">
       smtel=#{smtel},
   </if>
   <if test="education !='' and education != null">
       education=#{education},
   </if>
   <if test="state !='' and state != null">
       state=#{state},
   </if>
   <if test="channel !='' and channel != null">
       channel=#{channel},
   </if>
   <if test="website !='' and website != null">
       website=#{website},
   </if>
   <if test="keyWord !='' and keyWord != null">
       keyWord=#{keyWord},
   </if>
   <if test="department !='' and department != null">
       department=#{department},
   </if>
   <if test="nameConsultation !='' and nameConsultation != null">
       nameConsultation=#{nameConsultation},
   </if>
   <if test="region !='' and region != null">
       region=#{region},
   </if>
   <if test="isReport !='' and isReport != null">
       isReport=#{isReport},
   </if>
   <if test="curriculum !='' and curriculum != null">
       curriculum=#{curriculum},
   </if>
    <if test="isEffective !='' and isEffective != null">
       isEffective=#{isEffective},
   </if>
   <if test="scoring !='' and scoring != null">
       scoring=#{scoring},
   </if>
   <if test="isReturnVisit !='' and isReturnVisit != null">
       isReturnVisit=#{isReturnVisit},
   </if>
   <if test="returnVisitData !='' and returnVisitData != null">
       returnVisitData=#{returnVisitData},
   </if>
   <if test="door !='' and door != null">
       door=#{door},
   </if>
   <if test="doorData !='' and doorData != null">
       doorData=#{doorData},
   </if>
   <if test="reason !='' and reason != null">
       reason=#{reason},
   </if>
   <if test="isPay !='' and isPay != null">
       isPay=#{isPay},
   </if>
   <if test="payData !='' and payData != null">
       payData=#{payData},
   </if>
   <if test="money !='' and money != null">
       money=#{money},
   </if>
   <if test="isRefund !='' and isRefund != null">
       isRefund=#{isRefund},
   </if>
   <if test="isClassEntry !='' and isClassEntry != null">
       isClassEntry=#{isClassEntry},
   </if>
   <if test="classEntryData !='' and classEntryData != null">
       classEntryData=#{classEntryData},
   </if>
   <if test="classEntryRemarks !='' and classEntryRemarks != null">
       classEntryRemarks=#{classEntryRemarks},
   </if>
   <if test="reasonsRefund !='' and reasonsRefund != null">
       reasonsRefund=#{reasonsRefund},
   </if>
   <if test="earnestMoney !='' and earnestMoney != null">
       earnestMoney=#{earnestMoney},
   </if>
   <if test="earnestMoneyData !='' and earnestMoneyData != null">
       earnestMoneyData=#{earnestMoneyData},
   </if>
   <if test="follow !='' and follow != null">
       follow=#{follow},
   </if>
   <if test="qq !='' and qq != null">
       qq=#{qq},
   </if>
    <if test="weiXin !='' and weiXin != null">
       weiXin=#{weiXin},
   </if>
   <if test="isEnroll !='' and isEnroll != null">
       isEnroll=#{isEnroll},
   </if>
    <if test="remarks !='' and remarks != null">
       remarks=#{remarks},
   </if>
   <if test="consultantId !='' and consultantId != null">
       consultantId=#{consultantId},
   </if>
   <if test="entryPersonId !='' and entryPersonId != null">
       entryPersonId=#{entryPersonId},
   </if>
   <if test="consultantRemarks !='' and consultantRemarks != null">
       consultantRemarks=#{consultantRemarks}
   </if>


</set>
<where>
sid=#{sid}
</where>
</update>


<select id="selectStuQuanBu"  resultType="students">
select * from students 
</select>





<select id="selectStuCountGeRen" parameterType="fenye" resultType="int">
select count(sid) from students s,Users u
    <where>
    s.ConsultantId=#{JiaoXueid} and u.Uid=s.ConsultantId
    <if test="sname !='' and sname !=null">
        and sname like "%"#{sname}"%"
    </if>
    <if test="Smtel !='' and Smtel !=null">
        and Smtel like "%"#{Smtel}"%"
    </if>
    <if test="zixunshi !='' and zixunshi !=null">
        and u.LoginName=#{zixunshi}
    </if>
    <if test="QQ !='' and QQ !=null">
        and s.QQ like "%"#{QQ}"%"
    </if>
    <if test="StartData!=null and StartData!=''">
		and CreateData &gt; #{StartData}
	</if>
	<if test="EndData!=null and EndData!=''">
		and CreateData &lt; #{EndData}
	</if>
	<if test="IsEffective !='' and IsEffective !=null">
        and IsEffective=#{IsEffective}
    </if>
    <if test="IsPay !='' and IsPay !=null">
        and IsPay=#{IsPay}
    </if>
    <if test="IsReturnVisit !='' and IsReturnVisit !=null">
        and IsReturnVisit=#{IsReturnVisit}
    </if> 
</where>
</select>
<select id="selectStuGeRen" parameterType="fenye" resultType="students">
select * from students s,Users u
<where>
     s.ConsultantId=#{JiaoXueid} and u.Uid=s.ConsultantId
     <if test="sname !='' and sname !=null">
        and sname like "%"#{sname}"%"
    </if> 
    <if test="Smtel !='' and Smtel !=null">
        and s.Smtel like "%"#{Smtel}"%"
    </if>
    <if test="zixunshi !='' and zixunshi !=null">
        and u.LoginName=#{zixunshi}
    </if>
    <if test="QQ !='' and QQ !=null">
        and s.QQ like "%"#{QQ}"%"
    </if>
    <if test="StartData!=null and StartData!=''">
		and CreateData &gt; #{StartData}
	</if>
	<if test="EndData!=null and EndData!=''">
		and CreateData &lt; #{EndData}
	</if>
	<if test="IsEffective !='' and IsEffective !=null">
        and IsEffective=#{IsEffective}
    </if>
    <if test="IsPay !='' and IsPay !=null">
        and IsPay=#{IsPay}
    </if>
    <if test="IsReturnVisit !='' and IsReturnVisit !=null">
        and IsReturnVisit=#{IsReturnVisit}
    </if>  
</where>
 limit #{page},#{pageSize}
</select>


<update id="InsertTrack" parameterType="track">
Insert into track   (Studentid,UserId,TrackStartData,ReturnVisit,TrackingMode,NextTrackingData,Content)
values(#{Studentid},#{UserId},#{TrackStartData},#{ReturnVisit},#{TrackingMode},#{NextTrackingData},#{Content})
</update>





<select id="SelectTrackstu" parameterType="fenYe" resultType="track">
select Tid,Studentid,UserId,TrackStartData,TrackEndData,ReturnVisit,TrackingMode,Content,NextTrackingData,Operation,s.Sname as StudentName,u.LoginName as UsersName 
from track t,Students s,Users u
<where>
t.Studentid=#{sid} and 
t.Studentid=s.Sid and t.UserId=u.Uid

</where>
limit #{page},#{pageSize}
</select>


<select id="SelectCountstu" parameterType="fenYe" resultType="int">
select count(Tid) from track t,Students s,Users u
<where>
t.Studentid=#{sid} and 
t.Studentid=s.Sid and t.UserId=u.Uid
</where>
</select>

<select id="SelectCountDengJi" parameterType="fenYe" resultType="int">
select count(uid) from Users
where
 SignIn=1
and  weight=#{page}
and  Int0=#{pageSize}

</select>


<select id="selectFenLianDengji" parameterType="fenYe" resultType="users">
select * from Users
where
 SignIn=1
and  weight=#{page}
and  Int0=#{pageSize}


</select>

<update id="updateFenLiangDengJi"  parameterType="fenYe">
update Users set Int0=#{page} where Uid=#{pageSize}
</update>
<update id="UpdateFenLiangQuanBu"  >
update Users set Int0=0
</update>
<!-- 查询所有咨询师 -->
<select id="SelectChaXunZiXunShi" resultType="users">
select uid,LoginName  from Users where Uid in (select UserId from  UserRoles where RoleId=3)
</select>
<!-- 给学生修改咨询师 -->
<update id="UpdateXueShengZiXunShi" parameterType="fenYe">
update Students set ConsultantId=#{pageSize} where Sid=#{page}
</update>

<select id="selectStudent_xuanzhong" parameterType="list" resultType="students">
select s.Sid,
s.Sname,
s.Sex,
s.Age,
s.Smtel,
s.Education,
s.State,
s.Channel,
s.Website,
s.KeyWord,
s.Department,
s.NameConsultation,
s.Region,
s.IsReport,
s.Curriculum,
s.IsEffective,
s.Scoring,
s.IsReturnVisit,
s.ReturnVisitData,
s.Door,
s.DoorData,
s.Reason,
s.IsPay,
s.PayData,
s.Money,
s.IsRefund,
s.IsClassEntry,
s.ClassEntryData,
s.ClassEntryRemarks,
s.ReasonsRefund,
s.EarnestMoney,
s.EarnestMoneyData,
s.Follow,
s.QQ,
s.WeiXin,
s.IsEnroll,
s.Remarks,
s.ConsultantId,
s.NetworkConsultantId,
(select LoginName from  Users where Uid=1) as lururen,
s.ConsultantRemarks,
s.Int0,u.LoginName as zixunshi,s.String0
  from students s,Users u
where u.Uid=s.ConsultantId and s.sid in
		<foreach collection="list" item="item" open="(" separator=","
			close=")">
			#{item}
		</foreach>
	</select>
</mapper>